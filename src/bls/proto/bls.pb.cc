// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bls.proto

#include "bls.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_bls_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bls_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AgainstParticipant;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bls_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SwapSecKeyReq;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bls_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VerifyVecBrdRes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bls_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VerifyVecItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bls_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VerifyVecBrdReq;
}  // namespace protobuf_bls_2eproto
namespace tenon {
namespace bls {
namespace protobuf {
class VerifyVecItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerifyVecItem>
      _instance;
} _VerifyVecItem_default_instance_;
class VerifyVecBrdReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerifyVecBrdReq>
      _instance;
} _VerifyVecBrdReq_default_instance_;
class VerifyVecBrdResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerifyVecBrdRes>
      _instance;
} _VerifyVecBrdRes_default_instance_;
class SwapSecKeyReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SwapSecKeyReq>
      _instance;
} _SwapSecKeyReq_default_instance_;
class AgainstParticipantDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AgainstParticipant>
      _instance;
} _AgainstParticipant_default_instance_;
class BlsMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BlsMessage>
      _instance;
} _BlsMessage_default_instance_;
}  // namespace protobuf
}  // namespace bls
}  // namespace tenon
namespace protobuf_bls_2eproto {
static void InitDefaultsVerifyVecItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tenon::bls::protobuf::_VerifyVecItem_default_instance_;
    new (ptr) ::tenon::bls::protobuf::VerifyVecItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tenon::bls::protobuf::VerifyVecItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VerifyVecItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVerifyVecItem}, {}};

static void InitDefaultsVerifyVecBrdReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tenon::bls::protobuf::_VerifyVecBrdReq_default_instance_;
    new (ptr) ::tenon::bls::protobuf::VerifyVecBrdReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tenon::bls::protobuf::VerifyVecBrdReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VerifyVecBrdReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVerifyVecBrdReq}, {
      &protobuf_bls_2eproto::scc_info_VerifyVecItem.base,}};

static void InitDefaultsVerifyVecBrdRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tenon::bls::protobuf::_VerifyVecBrdRes_default_instance_;
    new (ptr) ::tenon::bls::protobuf::VerifyVecBrdRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tenon::bls::protobuf::VerifyVecBrdRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VerifyVecBrdRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVerifyVecBrdRes}, {}};

static void InitDefaultsSwapSecKeyReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tenon::bls::protobuf::_SwapSecKeyReq_default_instance_;
    new (ptr) ::tenon::bls::protobuf::SwapSecKeyReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tenon::bls::protobuf::SwapSecKeyReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SwapSecKeyReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSwapSecKeyReq}, {}};

static void InitDefaultsAgainstParticipant() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tenon::bls::protobuf::_AgainstParticipant_default_instance_;
    new (ptr) ::tenon::bls::protobuf::AgainstParticipant();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tenon::bls::protobuf::AgainstParticipant::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AgainstParticipant =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAgainstParticipant}, {}};

static void InitDefaultsBlsMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tenon::bls::protobuf::_BlsMessage_default_instance_;
    new (ptr) ::tenon::bls::protobuf::BlsMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tenon::bls::protobuf::BlsMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_BlsMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsBlsMessage}, {
      &protobuf_bls_2eproto::scc_info_VerifyVecBrdReq.base,
      &protobuf_bls_2eproto::scc_info_SwapSecKeyReq.base,
      &protobuf_bls_2eproto::scc_info_AgainstParticipant.base,
      &protobuf_bls_2eproto::scc_info_VerifyVecBrdRes.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_VerifyVecItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VerifyVecBrdReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VerifyVecBrdRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SwapSecKeyReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AgainstParticipant.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BlsMessage.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::VerifyVecItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::VerifyVecItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::VerifyVecItem, x_c0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::VerifyVecItem, x_c1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::VerifyVecItem, y_c0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::VerifyVecItem, y_c1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::VerifyVecItem, z_c0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::VerifyVecItem, z_c1_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::VerifyVecBrdReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::VerifyVecBrdReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::VerifyVecBrdReq, verify_vec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::VerifyVecBrdReq, public_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::VerifyVecBrdReq, public_port_),
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::VerifyVecBrdRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::VerifyVecBrdRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::VerifyVecBrdRes, public_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::VerifyVecBrdRes, public_port_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::SwapSecKeyReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::SwapSecKeyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::SwapSecKeyReq, sec_key_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::AgainstParticipant, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::AgainstParticipant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::AgainstParticipant, against_index_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::BlsMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::BlsMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::BlsMessage, verify_brd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::BlsMessage, swap_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::BlsMessage, against_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::BlsMessage, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::BlsMessage, sign_ch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::BlsMessage, sign_res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::BlsMessage, elect_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tenon::bls::protobuf::BlsMessage, verify_res_),
  2,
  3,
  4,
  7,
  0,
  1,
  6,
  5,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(::tenon::bls::protobuf::VerifyVecItem)},
  { 17, 25, sizeof(::tenon::bls::protobuf::VerifyVecBrdReq)},
  { 28, 35, sizeof(::tenon::bls::protobuf::VerifyVecBrdRes)},
  { 37, 43, sizeof(::tenon::bls::protobuf::SwapSecKeyReq)},
  { 44, 50, sizeof(::tenon::bls::protobuf::AgainstParticipant)},
  { 51, 64, sizeof(::tenon::bls::protobuf::BlsMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tenon::bls::protobuf::_VerifyVecItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tenon::bls::protobuf::_VerifyVecBrdReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tenon::bls::protobuf::_VerifyVecBrdRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tenon::bls::protobuf::_SwapSecKeyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tenon::bls::protobuf::_AgainstParticipant_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tenon::bls::protobuf::_BlsMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "bls.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tbls.proto\022\022tenon.bls.protobuf\"c\n\rVerif"
      "yVecItem\022\014\n\004x_c0\030\001 \001(\014\022\014\n\004x_c1\030\002 \001(\014\022\014\n\004"
      "y_c0\030\003 \001(\014\022\014\n\004y_c1\030\004 \001(\014\022\014\n\004z_c0\030\005 \001(\014\022\014"
      "\n\004z_c1\030\006 \001(\014\"p\n\017VerifyVecBrdReq\0225\n\nverif"
      "y_vec\030\001 \003(\0132!.tenon.bls.protobuf.VerifyV"
      "ecItem\022\021\n\tpublic_ip\030\002 \001(\014\022\023\n\013public_port"
      "\030\003 \001(\r\"9\n\017VerifyVecBrdRes\022\021\n\tpublic_ip\030\001"
      " \001(\014\022\023\n\013public_port\030\002 \001(\r\" \n\rSwapSecKeyR"
      "eq\022\017\n\007sec_key\030\001 \001(\014\"+\n\022AgainstParticipan"
      "t\022\025\n\ragainst_index\030\001 \001(\r\"\270\002\n\nBlsMessage\022"
      "7\n\nverify_brd\030\001 \001(\0132#.tenon.bls.protobuf"
      ".VerifyVecBrdReq\0223\n\010swap_req\030\002 \001(\0132!.ten"
      "on.bls.protobuf.SwapSecKeyReq\022;\n\013against"
      "_req\030\003 \001(\0132&.tenon.bls.protobuf.AgainstP"
      "articipant\022\r\n\005index\030\004 \001(\r\022\017\n\007sign_ch\030\005 \001"
      "(\014\022\020\n\010sign_res\030\006 \001(\014\022\024\n\014elect_height\030\007 \001"
      "(\004\0227\n\nverify_res\030\010 \001(\0132#.tenon.bls.proto"
      "buf.VerifyVecBrdRes"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 699);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bls.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_bls_2eproto
namespace tenon {
namespace bls {
namespace protobuf {

// ===================================================================

void VerifyVecItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyVecItem::kXC0FieldNumber;
const int VerifyVecItem::kXC1FieldNumber;
const int VerifyVecItem::kYC0FieldNumber;
const int VerifyVecItem::kYC1FieldNumber;
const int VerifyVecItem::kZC0FieldNumber;
const int VerifyVecItem::kZC1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyVecItem::VerifyVecItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bls_2eproto::scc_info_VerifyVecItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tenon.bls.protobuf.VerifyVecItem)
}
VerifyVecItem::VerifyVecItem(const VerifyVecItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  x_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_x_c0()) {
    x_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c0_);
  }
  x_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_x_c1()) {
    x_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c1_);
  }
  y_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_y_c0()) {
    y_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c0_);
  }
  y_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_y_c1()) {
    y_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c1_);
  }
  z_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_z_c0()) {
    z_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.z_c0_);
  }
  z_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_z_c1()) {
    z_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.z_c1_);
  }
  // @@protoc_insertion_point(copy_constructor:tenon.bls.protobuf.VerifyVecItem)
}

void VerifyVecItem::SharedCtor() {
  x_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  z_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  z_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VerifyVecItem::~VerifyVecItem() {
  // @@protoc_insertion_point(destructor:tenon.bls.protobuf.VerifyVecItem)
  SharedDtor();
}

void VerifyVecItem::SharedDtor() {
  x_c0_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_c1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c0_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  z_c0_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  z_c1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VerifyVecItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VerifyVecItem::descriptor() {
  ::protobuf_bls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyVecItem& VerifyVecItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bls_2eproto::scc_info_VerifyVecItem.base);
  return *internal_default_instance();
}


void VerifyVecItem::Clear() {
// @@protoc_insertion_point(message_clear_start:tenon.bls.protobuf.VerifyVecItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      x_c0_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      x_c1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      y_c0_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      y_c1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      z_c0_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      z_c1_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VerifyVecItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tenon.bls.protobuf.VerifyVecItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes x_c0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_x_c0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes x_c1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_x_c1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes y_c0 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_y_c0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes y_c1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_y_c1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes z_c0 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_z_c0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes z_c1 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_z_c1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tenon.bls.protobuf.VerifyVecItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tenon.bls.protobuf.VerifyVecItem)
  return false;
#undef DO_
}

void VerifyVecItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tenon.bls.protobuf.VerifyVecItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes x_c0 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->x_c0(), output);
  }

  // optional bytes x_c1 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->x_c1(), output);
  }

  // optional bytes y_c0 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->y_c0(), output);
  }

  // optional bytes y_c1 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->y_c1(), output);
  }

  // optional bytes z_c0 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->z_c0(), output);
  }

  // optional bytes z_c1 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->z_c1(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tenon.bls.protobuf.VerifyVecItem)
}

::google::protobuf::uint8* VerifyVecItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tenon.bls.protobuf.VerifyVecItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes x_c0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->x_c0(), target);
  }

  // optional bytes x_c1 = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->x_c1(), target);
  }

  // optional bytes y_c0 = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->y_c0(), target);
  }

  // optional bytes y_c1 = 4;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->y_c1(), target);
  }

  // optional bytes z_c0 = 5;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->z_c0(), target);
  }

  // optional bytes z_c1 = 6;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->z_c1(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tenon.bls.protobuf.VerifyVecItem)
  return target;
}

size_t VerifyVecItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tenon.bls.protobuf.VerifyVecItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes x_c0 = 1;
    if (has_x_c0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->x_c0());
    }

    // optional bytes x_c1 = 2;
    if (has_x_c1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->x_c1());
    }

    // optional bytes y_c0 = 3;
    if (has_y_c0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->y_c0());
    }

    // optional bytes y_c1 = 4;
    if (has_y_c1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->y_c1());
    }

    // optional bytes z_c0 = 5;
    if (has_z_c0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->z_c0());
    }

    // optional bytes z_c1 = 6;
    if (has_z_c1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->z_c1());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerifyVecItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tenon.bls.protobuf.VerifyVecItem)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyVecItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyVecItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tenon.bls.protobuf.VerifyVecItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tenon.bls.protobuf.VerifyVecItem)
    MergeFrom(*source);
  }
}

void VerifyVecItem::MergeFrom(const VerifyVecItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tenon.bls.protobuf.VerifyVecItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_x_c0();
      x_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c0_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_x_c1();
      x_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c1_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_y_c0();
      y_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c0_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_y_c1();
      y_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c1_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_z_c0();
      z_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.z_c0_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_z_c1();
      z_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.z_c1_);
    }
  }
}

void VerifyVecItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tenon.bls.protobuf.VerifyVecItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyVecItem::CopyFrom(const VerifyVecItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tenon.bls.protobuf.VerifyVecItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyVecItem::IsInitialized() const {
  return true;
}

void VerifyVecItem::Swap(VerifyVecItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyVecItem::InternalSwap(VerifyVecItem* other) {
  using std::swap;
  x_c0_.Swap(&other->x_c0_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  x_c1_.Swap(&other->x_c1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  y_c0_.Swap(&other->y_c0_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  y_c1_.Swap(&other->y_c1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  z_c0_.Swap(&other->z_c0_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  z_c1_.Swap(&other->z_c1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VerifyVecItem::GetMetadata() const {
  protobuf_bls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VerifyVecBrdReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyVecBrdReq::kVerifyVecFieldNumber;
const int VerifyVecBrdReq::kPublicIpFieldNumber;
const int VerifyVecBrdReq::kPublicPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyVecBrdReq::VerifyVecBrdReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bls_2eproto::scc_info_VerifyVecBrdReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tenon.bls.protobuf.VerifyVecBrdReq)
}
VerifyVecBrdReq::VerifyVecBrdReq(const VerifyVecBrdReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      verify_vec_(from.verify_vec_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  public_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_public_ip()) {
    public_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_ip_);
  }
  public_port_ = from.public_port_;
  // @@protoc_insertion_point(copy_constructor:tenon.bls.protobuf.VerifyVecBrdReq)
}

void VerifyVecBrdReq::SharedCtor() {
  public_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_port_ = 0u;
}

VerifyVecBrdReq::~VerifyVecBrdReq() {
  // @@protoc_insertion_point(destructor:tenon.bls.protobuf.VerifyVecBrdReq)
  SharedDtor();
}

void VerifyVecBrdReq::SharedDtor() {
  public_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VerifyVecBrdReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VerifyVecBrdReq::descriptor() {
  ::protobuf_bls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyVecBrdReq& VerifyVecBrdReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bls_2eproto::scc_info_VerifyVecBrdReq.base);
  return *internal_default_instance();
}


void VerifyVecBrdReq::Clear() {
// @@protoc_insertion_point(message_clear_start:tenon.bls.protobuf.VerifyVecBrdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  verify_vec_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    public_ip_.ClearNonDefaultToEmptyNoArena();
  }
  public_port_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VerifyVecBrdReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tenon.bls.protobuf.VerifyVecBrdReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tenon.bls.protobuf.VerifyVecItem verify_vec = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_verify_vec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes public_ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_public_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 public_port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_public_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &public_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tenon.bls.protobuf.VerifyVecBrdReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tenon.bls.protobuf.VerifyVecBrdReq)
  return false;
#undef DO_
}

void VerifyVecBrdReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tenon.bls.protobuf.VerifyVecBrdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tenon.bls.protobuf.VerifyVecItem verify_vec = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->verify_vec_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->verify_vec(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes public_ip = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->public_ip(), output);
  }

  // optional uint32 public_port = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->public_port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tenon.bls.protobuf.VerifyVecBrdReq)
}

::google::protobuf::uint8* VerifyVecBrdReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tenon.bls.protobuf.VerifyVecBrdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tenon.bls.protobuf.VerifyVecItem verify_vec = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->verify_vec_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->verify_vec(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes public_ip = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->public_ip(), target);
  }

  // optional uint32 public_port = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->public_port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tenon.bls.protobuf.VerifyVecBrdReq)
  return target;
}

size_t VerifyVecBrdReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tenon.bls.protobuf.VerifyVecBrdReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .tenon.bls.protobuf.VerifyVecItem verify_vec = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->verify_vec_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->verify_vec(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes public_ip = 2;
    if (has_public_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->public_ip());
    }

    // optional uint32 public_port = 3;
    if (has_public_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->public_port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerifyVecBrdReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tenon.bls.protobuf.VerifyVecBrdReq)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyVecBrdReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyVecBrdReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tenon.bls.protobuf.VerifyVecBrdReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tenon.bls.protobuf.VerifyVecBrdReq)
    MergeFrom(*source);
  }
}

void VerifyVecBrdReq::MergeFrom(const VerifyVecBrdReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tenon.bls.protobuf.VerifyVecBrdReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  verify_vec_.MergeFrom(from.verify_vec_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_public_ip();
      public_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_ip_);
    }
    if (cached_has_bits & 0x00000002u) {
      public_port_ = from.public_port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VerifyVecBrdReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tenon.bls.protobuf.VerifyVecBrdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyVecBrdReq::CopyFrom(const VerifyVecBrdReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tenon.bls.protobuf.VerifyVecBrdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyVecBrdReq::IsInitialized() const {
  return true;
}

void VerifyVecBrdReq::Swap(VerifyVecBrdReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyVecBrdReq::InternalSwap(VerifyVecBrdReq* other) {
  using std::swap;
  CastToBase(&verify_vec_)->InternalSwap(CastToBase(&other->verify_vec_));
  public_ip_.Swap(&other->public_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(public_port_, other->public_port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VerifyVecBrdReq::GetMetadata() const {
  protobuf_bls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VerifyVecBrdRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyVecBrdRes::kPublicIpFieldNumber;
const int VerifyVecBrdRes::kPublicPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyVecBrdRes::VerifyVecBrdRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bls_2eproto::scc_info_VerifyVecBrdRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tenon.bls.protobuf.VerifyVecBrdRes)
}
VerifyVecBrdRes::VerifyVecBrdRes(const VerifyVecBrdRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  public_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_public_ip()) {
    public_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_ip_);
  }
  public_port_ = from.public_port_;
  // @@protoc_insertion_point(copy_constructor:tenon.bls.protobuf.VerifyVecBrdRes)
}

void VerifyVecBrdRes::SharedCtor() {
  public_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_port_ = 0u;
}

VerifyVecBrdRes::~VerifyVecBrdRes() {
  // @@protoc_insertion_point(destructor:tenon.bls.protobuf.VerifyVecBrdRes)
  SharedDtor();
}

void VerifyVecBrdRes::SharedDtor() {
  public_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VerifyVecBrdRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VerifyVecBrdRes::descriptor() {
  ::protobuf_bls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyVecBrdRes& VerifyVecBrdRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bls_2eproto::scc_info_VerifyVecBrdRes.base);
  return *internal_default_instance();
}


void VerifyVecBrdRes::Clear() {
// @@protoc_insertion_point(message_clear_start:tenon.bls.protobuf.VerifyVecBrdRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    public_ip_.ClearNonDefaultToEmptyNoArena();
  }
  public_port_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VerifyVecBrdRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tenon.bls.protobuf.VerifyVecBrdRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes public_ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_public_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 public_port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_public_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &public_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tenon.bls.protobuf.VerifyVecBrdRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tenon.bls.protobuf.VerifyVecBrdRes)
  return false;
#undef DO_
}

void VerifyVecBrdRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tenon.bls.protobuf.VerifyVecBrdRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes public_ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->public_ip(), output);
  }

  // optional uint32 public_port = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->public_port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tenon.bls.protobuf.VerifyVecBrdRes)
}

::google::protobuf::uint8* VerifyVecBrdRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tenon.bls.protobuf.VerifyVecBrdRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes public_ip = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->public_ip(), target);
  }

  // optional uint32 public_port = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->public_port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tenon.bls.protobuf.VerifyVecBrdRes)
  return target;
}

size_t VerifyVecBrdRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tenon.bls.protobuf.VerifyVecBrdRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes public_ip = 1;
    if (has_public_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->public_ip());
    }

    // optional uint32 public_port = 2;
    if (has_public_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->public_port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerifyVecBrdRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tenon.bls.protobuf.VerifyVecBrdRes)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyVecBrdRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyVecBrdRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tenon.bls.protobuf.VerifyVecBrdRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tenon.bls.protobuf.VerifyVecBrdRes)
    MergeFrom(*source);
  }
}

void VerifyVecBrdRes::MergeFrom(const VerifyVecBrdRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tenon.bls.protobuf.VerifyVecBrdRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_public_ip();
      public_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_ip_);
    }
    if (cached_has_bits & 0x00000002u) {
      public_port_ = from.public_port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VerifyVecBrdRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tenon.bls.protobuf.VerifyVecBrdRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyVecBrdRes::CopyFrom(const VerifyVecBrdRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tenon.bls.protobuf.VerifyVecBrdRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyVecBrdRes::IsInitialized() const {
  return true;
}

void VerifyVecBrdRes::Swap(VerifyVecBrdRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyVecBrdRes::InternalSwap(VerifyVecBrdRes* other) {
  using std::swap;
  public_ip_.Swap(&other->public_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(public_port_, other->public_port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VerifyVecBrdRes::GetMetadata() const {
  protobuf_bls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SwapSecKeyReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SwapSecKeyReq::kSecKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwapSecKeyReq::SwapSecKeyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bls_2eproto::scc_info_SwapSecKeyReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tenon.bls.protobuf.SwapSecKeyReq)
}
SwapSecKeyReq::SwapSecKeyReq(const SwapSecKeyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sec_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sec_key()) {
    sec_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sec_key_);
  }
  // @@protoc_insertion_point(copy_constructor:tenon.bls.protobuf.SwapSecKeyReq)
}

void SwapSecKeyReq::SharedCtor() {
  sec_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SwapSecKeyReq::~SwapSecKeyReq() {
  // @@protoc_insertion_point(destructor:tenon.bls.protobuf.SwapSecKeyReq)
  SharedDtor();
}

void SwapSecKeyReq::SharedDtor() {
  sec_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SwapSecKeyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SwapSecKeyReq::descriptor() {
  ::protobuf_bls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SwapSecKeyReq& SwapSecKeyReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bls_2eproto::scc_info_SwapSecKeyReq.base);
  return *internal_default_instance();
}


void SwapSecKeyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:tenon.bls.protobuf.SwapSecKeyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    sec_key_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SwapSecKeyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tenon.bls.protobuf.SwapSecKeyReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes sec_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sec_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tenon.bls.protobuf.SwapSecKeyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tenon.bls.protobuf.SwapSecKeyReq)
  return false;
#undef DO_
}

void SwapSecKeyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tenon.bls.protobuf.SwapSecKeyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sec_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sec_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tenon.bls.protobuf.SwapSecKeyReq)
}

::google::protobuf::uint8* SwapSecKeyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tenon.bls.protobuf.SwapSecKeyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sec_key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sec_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tenon.bls.protobuf.SwapSecKeyReq)
  return target;
}

size_t SwapSecKeyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tenon.bls.protobuf.SwapSecKeyReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bytes sec_key = 1;
  if (has_sec_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sec_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SwapSecKeyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tenon.bls.protobuf.SwapSecKeyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SwapSecKeyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SwapSecKeyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tenon.bls.protobuf.SwapSecKeyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tenon.bls.protobuf.SwapSecKeyReq)
    MergeFrom(*source);
  }
}

void SwapSecKeyReq::MergeFrom(const SwapSecKeyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tenon.bls.protobuf.SwapSecKeyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sec_key()) {
    set_has_sec_key();
    sec_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sec_key_);
  }
}

void SwapSecKeyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tenon.bls.protobuf.SwapSecKeyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwapSecKeyReq::CopyFrom(const SwapSecKeyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tenon.bls.protobuf.SwapSecKeyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwapSecKeyReq::IsInitialized() const {
  return true;
}

void SwapSecKeyReq::Swap(SwapSecKeyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwapSecKeyReq::InternalSwap(SwapSecKeyReq* other) {
  using std::swap;
  sec_key_.Swap(&other->sec_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SwapSecKeyReq::GetMetadata() const {
  protobuf_bls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AgainstParticipant::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AgainstParticipant::kAgainstIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AgainstParticipant::AgainstParticipant()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bls_2eproto::scc_info_AgainstParticipant.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tenon.bls.protobuf.AgainstParticipant)
}
AgainstParticipant::AgainstParticipant(const AgainstParticipant& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  against_index_ = from.against_index_;
  // @@protoc_insertion_point(copy_constructor:tenon.bls.protobuf.AgainstParticipant)
}

void AgainstParticipant::SharedCtor() {
  against_index_ = 0u;
}

AgainstParticipant::~AgainstParticipant() {
  // @@protoc_insertion_point(destructor:tenon.bls.protobuf.AgainstParticipant)
  SharedDtor();
}

void AgainstParticipant::SharedDtor() {
}

void AgainstParticipant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AgainstParticipant::descriptor() {
  ::protobuf_bls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AgainstParticipant& AgainstParticipant::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bls_2eproto::scc_info_AgainstParticipant.base);
  return *internal_default_instance();
}


void AgainstParticipant::Clear() {
// @@protoc_insertion_point(message_clear_start:tenon.bls.protobuf.AgainstParticipant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  against_index_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AgainstParticipant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tenon.bls.protobuf.AgainstParticipant)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 against_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_against_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &against_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tenon.bls.protobuf.AgainstParticipant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tenon.bls.protobuf.AgainstParticipant)
  return false;
#undef DO_
}

void AgainstParticipant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tenon.bls.protobuf.AgainstParticipant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 against_index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->against_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tenon.bls.protobuf.AgainstParticipant)
}

::google::protobuf::uint8* AgainstParticipant::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tenon.bls.protobuf.AgainstParticipant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 against_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->against_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tenon.bls.protobuf.AgainstParticipant)
  return target;
}

size_t AgainstParticipant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tenon.bls.protobuf.AgainstParticipant)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 against_index = 1;
  if (has_against_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->against_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgainstParticipant::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tenon.bls.protobuf.AgainstParticipant)
  GOOGLE_DCHECK_NE(&from, this);
  const AgainstParticipant* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AgainstParticipant>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tenon.bls.protobuf.AgainstParticipant)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tenon.bls.protobuf.AgainstParticipant)
    MergeFrom(*source);
  }
}

void AgainstParticipant::MergeFrom(const AgainstParticipant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tenon.bls.protobuf.AgainstParticipant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_against_index()) {
    set_against_index(from.against_index());
  }
}

void AgainstParticipant::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tenon.bls.protobuf.AgainstParticipant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgainstParticipant::CopyFrom(const AgainstParticipant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tenon.bls.protobuf.AgainstParticipant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgainstParticipant::IsInitialized() const {
  return true;
}

void AgainstParticipant::Swap(AgainstParticipant* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AgainstParticipant::InternalSwap(AgainstParticipant* other) {
  using std::swap;
  swap(against_index_, other->against_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AgainstParticipant::GetMetadata() const {
  protobuf_bls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BlsMessage::InitAsDefaultInstance() {
  ::tenon::bls::protobuf::_BlsMessage_default_instance_._instance.get_mutable()->verify_brd_ = const_cast< ::tenon::bls::protobuf::VerifyVecBrdReq*>(
      ::tenon::bls::protobuf::VerifyVecBrdReq::internal_default_instance());
  ::tenon::bls::protobuf::_BlsMessage_default_instance_._instance.get_mutable()->swap_req_ = const_cast< ::tenon::bls::protobuf::SwapSecKeyReq*>(
      ::tenon::bls::protobuf::SwapSecKeyReq::internal_default_instance());
  ::tenon::bls::protobuf::_BlsMessage_default_instance_._instance.get_mutable()->against_req_ = const_cast< ::tenon::bls::protobuf::AgainstParticipant*>(
      ::tenon::bls::protobuf::AgainstParticipant::internal_default_instance());
  ::tenon::bls::protobuf::_BlsMessage_default_instance_._instance.get_mutable()->verify_res_ = const_cast< ::tenon::bls::protobuf::VerifyVecBrdRes*>(
      ::tenon::bls::protobuf::VerifyVecBrdRes::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlsMessage::kVerifyBrdFieldNumber;
const int BlsMessage::kSwapReqFieldNumber;
const int BlsMessage::kAgainstReqFieldNumber;
const int BlsMessage::kIndexFieldNumber;
const int BlsMessage::kSignChFieldNumber;
const int BlsMessage::kSignResFieldNumber;
const int BlsMessage::kElectHeightFieldNumber;
const int BlsMessage::kVerifyResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlsMessage::BlsMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bls_2eproto::scc_info_BlsMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tenon.bls.protobuf.BlsMessage)
}
BlsMessage::BlsMessage(const BlsMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sign_ch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sign_ch()) {
    sign_ch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_ch_);
  }
  sign_res_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sign_res()) {
    sign_res_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_res_);
  }
  if (from.has_verify_brd()) {
    verify_brd_ = new ::tenon::bls::protobuf::VerifyVecBrdReq(*from.verify_brd_);
  } else {
    verify_brd_ = NULL;
  }
  if (from.has_swap_req()) {
    swap_req_ = new ::tenon::bls::protobuf::SwapSecKeyReq(*from.swap_req_);
  } else {
    swap_req_ = NULL;
  }
  if (from.has_against_req()) {
    against_req_ = new ::tenon::bls::protobuf::AgainstParticipant(*from.against_req_);
  } else {
    against_req_ = NULL;
  }
  if (from.has_verify_res()) {
    verify_res_ = new ::tenon::bls::protobuf::VerifyVecBrdRes(*from.verify_res_);
  } else {
    verify_res_ = NULL;
  }
  ::memcpy(&elect_height_, &from.elect_height_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&elect_height_)) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:tenon.bls.protobuf.BlsMessage)
}

void BlsMessage::SharedCtor() {
  sign_ch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_res_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&verify_brd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&verify_brd_)) + sizeof(index_));
}

BlsMessage::~BlsMessage() {
  // @@protoc_insertion_point(destructor:tenon.bls.protobuf.BlsMessage)
  SharedDtor();
}

void BlsMessage::SharedDtor() {
  sign_ch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_res_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete verify_brd_;
  if (this != internal_default_instance()) delete swap_req_;
  if (this != internal_default_instance()) delete against_req_;
  if (this != internal_default_instance()) delete verify_res_;
}

void BlsMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BlsMessage::descriptor() {
  ::protobuf_bls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlsMessage& BlsMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bls_2eproto::scc_info_BlsMessage.base);
  return *internal_default_instance();
}


void BlsMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:tenon.bls.protobuf.BlsMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      sign_ch_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sign_res_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(verify_brd_ != NULL);
      verify_brd_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(swap_req_ != NULL);
      swap_req_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(against_req_ != NULL);
      against_req_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(verify_res_ != NULL);
      verify_res_->Clear();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&elect_height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&index_) -
        reinterpret_cast<char*>(&elect_height_)) + sizeof(index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BlsMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tenon.bls.protobuf.BlsMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tenon.bls.protobuf.VerifyVecBrdReq verify_brd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_verify_brd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tenon.bls.protobuf.SwapSecKeyReq swap_req = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_swap_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tenon.bls.protobuf.AgainstParticipant against_req = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_against_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sign_ch = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sign_ch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sign_res = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sign_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 elect_height = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_elect_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &elect_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .tenon.bls.protobuf.VerifyVecBrdRes verify_res = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_verify_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tenon.bls.protobuf.BlsMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tenon.bls.protobuf.BlsMessage)
  return false;
#undef DO_
}

void BlsMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tenon.bls.protobuf.BlsMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tenon.bls.protobuf.VerifyVecBrdReq verify_brd = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_verify_brd(), output);
  }

  // optional .tenon.bls.protobuf.SwapSecKeyReq swap_req = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_swap_req(), output);
  }

  // optional .tenon.bls.protobuf.AgainstParticipant against_req = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_against_req(), output);
  }

  // optional uint32 index = 4;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->index(), output);
  }

  // optional bytes sign_ch = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->sign_ch(), output);
  }

  // optional bytes sign_res = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->sign_res(), output);
  }

  // optional uint64 elect_height = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->elect_height(), output);
  }

  // optional .tenon.bls.protobuf.VerifyVecBrdRes verify_res = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_verify_res(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tenon.bls.protobuf.BlsMessage)
}

::google::protobuf::uint8* BlsMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tenon.bls.protobuf.BlsMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .tenon.bls.protobuf.VerifyVecBrdReq verify_brd = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_verify_brd(), deterministic, target);
  }

  // optional .tenon.bls.protobuf.SwapSecKeyReq swap_req = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_swap_req(), deterministic, target);
  }

  // optional .tenon.bls.protobuf.AgainstParticipant against_req = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_against_req(), deterministic, target);
  }

  // optional uint32 index = 4;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->index(), target);
  }

  // optional bytes sign_ch = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->sign_ch(), target);
  }

  // optional bytes sign_res = 6;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->sign_res(), target);
  }

  // optional uint64 elect_height = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->elect_height(), target);
  }

  // optional .tenon.bls.protobuf.VerifyVecBrdRes verify_res = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_verify_res(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tenon.bls.protobuf.BlsMessage)
  return target;
}

size_t BlsMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tenon.bls.protobuf.BlsMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes sign_ch = 5;
    if (has_sign_ch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sign_ch());
    }

    // optional bytes sign_res = 6;
    if (has_sign_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sign_res());
    }

    // optional .tenon.bls.protobuf.VerifyVecBrdReq verify_brd = 1;
    if (has_verify_brd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *verify_brd_);
    }

    // optional .tenon.bls.protobuf.SwapSecKeyReq swap_req = 2;
    if (has_swap_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *swap_req_);
    }

    // optional .tenon.bls.protobuf.AgainstParticipant against_req = 3;
    if (has_against_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *against_req_);
    }

    // optional .tenon.bls.protobuf.VerifyVecBrdRes verify_res = 8;
    if (has_verify_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *verify_res_);
    }

    // optional uint64 elect_height = 7;
    if (has_elect_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->elect_height());
    }

    // optional uint32 index = 4;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlsMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tenon.bls.protobuf.BlsMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const BlsMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlsMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tenon.bls.protobuf.BlsMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tenon.bls.protobuf.BlsMessage)
    MergeFrom(*source);
  }
}

void BlsMessage::MergeFrom(const BlsMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tenon.bls.protobuf.BlsMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sign_ch();
      sign_ch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_ch_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sign_res();
      sign_res_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_res_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_verify_brd()->::tenon::bls::protobuf::VerifyVecBrdReq::MergeFrom(from.verify_brd());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_swap_req()->::tenon::bls::protobuf::SwapSecKeyReq::MergeFrom(from.swap_req());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_against_req()->::tenon::bls::protobuf::AgainstParticipant::MergeFrom(from.against_req());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_verify_res()->::tenon::bls::protobuf::VerifyVecBrdRes::MergeFrom(from.verify_res());
    }
    if (cached_has_bits & 0x00000040u) {
      elect_height_ = from.elect_height_;
    }
    if (cached_has_bits & 0x00000080u) {
      index_ = from.index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BlsMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tenon.bls.protobuf.BlsMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlsMessage::CopyFrom(const BlsMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tenon.bls.protobuf.BlsMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlsMessage::IsInitialized() const {
  return true;
}

void BlsMessage::Swap(BlsMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlsMessage::InternalSwap(BlsMessage* other) {
  using std::swap;
  sign_ch_.Swap(&other->sign_ch_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sign_res_.Swap(&other->sign_res_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(verify_brd_, other->verify_brd_);
  swap(swap_req_, other->swap_req_);
  swap(against_req_, other->against_req_);
  swap(verify_res_, other->verify_res_);
  swap(elect_height_, other->elect_height_);
  swap(index_, other->index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BlsMessage::GetMetadata() const {
  protobuf_bls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace bls
}  // namespace tenon
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tenon::bls::protobuf::VerifyVecItem* Arena::CreateMaybeMessage< ::tenon::bls::protobuf::VerifyVecItem >(Arena* arena) {
  return Arena::CreateInternal< ::tenon::bls::protobuf::VerifyVecItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tenon::bls::protobuf::VerifyVecBrdReq* Arena::CreateMaybeMessage< ::tenon::bls::protobuf::VerifyVecBrdReq >(Arena* arena) {
  return Arena::CreateInternal< ::tenon::bls::protobuf::VerifyVecBrdReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tenon::bls::protobuf::VerifyVecBrdRes* Arena::CreateMaybeMessage< ::tenon::bls::protobuf::VerifyVecBrdRes >(Arena* arena) {
  return Arena::CreateInternal< ::tenon::bls::protobuf::VerifyVecBrdRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tenon::bls::protobuf::SwapSecKeyReq* Arena::CreateMaybeMessage< ::tenon::bls::protobuf::SwapSecKeyReq >(Arena* arena) {
  return Arena::CreateInternal< ::tenon::bls::protobuf::SwapSecKeyReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tenon::bls::protobuf::AgainstParticipant* Arena::CreateMaybeMessage< ::tenon::bls::protobuf::AgainstParticipant >(Arena* arena) {
  return Arena::CreateInternal< ::tenon::bls::protobuf::AgainstParticipant >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tenon::bls::protobuf::BlsMessage* Arena::CreateMaybeMessage< ::tenon::bls::protobuf::BlsMessage >(Arena* arena) {
  return Arena::CreateInternal< ::tenon::bls::protobuf::BlsMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
