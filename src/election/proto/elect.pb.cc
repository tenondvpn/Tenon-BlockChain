#include "stdafx.h"
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: elect.proto

#include "elect.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_elect_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_elect_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_member;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_elect_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ElectBlock;
}  // namespace protobuf_elect_2eproto
namespace lego {
namespace elect {
namespace protobuf {
class memberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<member>
      _instance;
} _member_default_instance_;
class ElectBlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElectBlock>
      _instance;
} _ElectBlock_default_instance_;
class ElectMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElectMessage>
      _instance;
} _ElectMessage_default_instance_;
}  // namespace protobuf
}  // namespace elect
}  // namespace lego
namespace protobuf_elect_2eproto {
static void InitDefaultsmember() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::lego::elect::protobuf::_member_default_instance_;
    new (ptr) ::lego::elect::protobuf::member();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lego::elect::protobuf::member::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_member =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsmember}, {}};

static void InitDefaultsElectBlock() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::lego::elect::protobuf::_ElectBlock_default_instance_;
    new (ptr) ::lego::elect::protobuf::ElectBlock();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lego::elect::protobuf::ElectBlock::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ElectBlock =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsElectBlock}, {
      &protobuf_elect_2eproto::scc_info_member.base,}};

static void InitDefaultsElectMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::lego::elect::protobuf::_ElectMessage_default_instance_;
    new (ptr) ::lego::elect::protobuf::ElectMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lego::elect::protobuf::ElectMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ElectMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsElectMessage}, {
      &protobuf_elect_2eproto::scc_info_ElectBlock.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_member.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElectBlock.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElectMessage.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lego::elect::protobuf::member, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lego::elect::protobuf::member, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lego::elect::protobuf::member, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lego::elect::protobuf::member, pubkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lego::elect::protobuf::member, sign_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lego::elect::protobuf::member, net_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lego::elect::protobuf::member, country_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lego::elect::protobuf::member, dht_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lego::elect::protobuf::member, nat_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lego::elect::protobuf::member, public_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lego::elect::protobuf::member, public_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lego::elect::protobuf::member, local_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lego::elect::protobuf::member, local_port_),
  0,
  1,
  2,
  6,
  7,
  3,
  8,
  4,
  9,
  5,
  10,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lego::elect::protobuf::ElectBlock, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lego::elect::protobuf::ElectBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lego::elect::protobuf::ElectBlock, in_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lego::elect::protobuf::ElectBlock, out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lego::elect::protobuf::ElectBlock, acc_pubkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lego::elect::protobuf::ElectBlock, acc_sign_),
  ~0u,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lego::elect::protobuf::ElectMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lego::elect::protobuf::ElectMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lego::elect::protobuf::ElectMessage, elect_block_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 16, sizeof(::lego::elect::protobuf::member)},
  { 27, 36, sizeof(::lego::elect::protobuf::ElectBlock)},
  { 40, 46, sizeof(::lego::elect::protobuf::ElectMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::lego::elect::protobuf::_member_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lego::elect::protobuf::_ElectBlock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lego::elect::protobuf::_ElectMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "elect.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013elect.proto\022\023lego.elect.protobuf\"\304\001\n\006m"
      "ember\022\n\n\002id\030\001 \001(\014\022\016\n\006pubkey\030\002 \001(\014\022\014\n\004sig"
      "n\030\003 \001(\014\022\016\n\006net_id\030\004 \001(\r\022\017\n\007country\030\005 \001(\r"
      "\022\017\n\007dht_key\030\006 \001(\014\022\020\n\010nat_type\030\007 \001(\005\022\021\n\tp"
      "ublic_ip\030\010 \001(\014\022\023\n\013public_port\030\t \001(\r\022\020\n\010l"
      "ocal_ip\030\n \001(\014\022\022\n\nlocal_port\030\013 \001(\r\"\205\001\n\nEl"
      "ectBlock\022\'\n\002in\030\001 \003(\0132\033.lego.elect.protob"
      "uf.member\022(\n\003out\030\002 \003(\0132\033.lego.elect.prot"
      "obuf.member\022\022\n\nacc_pubkey\030\003 \001(\014\022\020\n\010acc_s"
      "ign\030\004 \001(\014\"D\n\014ElectMessage\0224\n\013elect_block"
      "\030\001 \001(\0132\037.lego.elect.protobuf.ElectBlock"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 439);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "elect.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_elect_2eproto
namespace lego {
namespace elect {
namespace protobuf {

// ===================================================================

void member::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int member::kIdFieldNumber;
const int member::kPubkeyFieldNumber;
const int member::kSignFieldNumber;
const int member::kNetIdFieldNumber;
const int member::kCountryFieldNumber;
const int member::kDhtKeyFieldNumber;
const int member::kNatTypeFieldNumber;
const int member::kPublicIpFieldNumber;
const int member::kPublicPortFieldNumber;
const int member::kLocalIpFieldNumber;
const int member::kLocalPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

member::member()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_elect_2eproto::scc_info_member.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:lego.elect.protobuf.member)
}
member::member(const member& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pubkey()) {
    pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
  }
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sign()) {
    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  dht_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dht_key()) {
    dht_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dht_key_);
  }
  public_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_public_ip()) {
    public_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_ip_);
  }
  local_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_local_ip()) {
    local_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_ip_);
  }
  ::memcpy(&net_id_, &from.net_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&local_port_) -
    reinterpret_cast<char*>(&net_id_)) + sizeof(local_port_));
  // @@protoc_insertion_point(copy_constructor:lego.elect.protobuf.member)
}

void member::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dht_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&net_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&local_port_) -
      reinterpret_cast<char*>(&net_id_)) + sizeof(local_port_));
}

member::~member() {
  // @@protoc_insertion_point(destructor:lego.elect.protobuf.member)
  SharedDtor();
}

void member::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pubkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dht_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void member::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* member::descriptor() {
  ::protobuf_elect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_elect_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const member& member::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_elect_2eproto::scc_info_member.base);
  return *internal_default_instance();
}


void member::Clear() {
// @@protoc_insertion_point(message_clear_start:lego.elect.protobuf.member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      pubkey_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      sign_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      dht_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      public_ip_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      local_ip_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&net_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&country_) -
        reinterpret_cast<char*>(&net_id_)) + sizeof(country_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&nat_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&local_port_) -
        reinterpret_cast<char*>(&nat_type_)) + sizeof(local_port_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool member::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lego.elect.protobuf.member)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pubkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pubkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sign = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sign()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 net_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_net_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &net_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 country = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_country();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &country_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes dht_key = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_dht_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 nat_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_nat_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nat_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes public_ip = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_public_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 public_port = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_public_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &public_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes local_ip = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_local_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 local_port = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_local_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &local_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lego.elect.protobuf.member)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lego.elect.protobuf.member)
  return false;
#undef DO_
}

void member::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lego.elect.protobuf.member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->id(), output);
  }

  // optional bytes pubkey = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pubkey(), output);
  }

  // optional bytes sign = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->sign(), output);
  }

  // optional uint32 net_id = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->net_id(), output);
  }

  // optional uint32 country = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->country(), output);
  }

  // optional bytes dht_key = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->dht_key(), output);
  }

  // optional int32 nat_type = 7;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->nat_type(), output);
  }

  // optional bytes public_ip = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->public_ip(), output);
  }

  // optional uint32 public_port = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->public_port(), output);
  }

  // optional bytes local_ip = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->local_ip(), output);
  }

  // optional uint32 local_port = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->local_port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:lego.elect.protobuf.member)
}

::google::protobuf::uint8* member::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lego.elect.protobuf.member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes id = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->id(), target);
  }

  // optional bytes pubkey = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pubkey(), target);
  }

  // optional bytes sign = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->sign(), target);
  }

  // optional uint32 net_id = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->net_id(), target);
  }

  // optional uint32 country = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->country(), target);
  }

  // optional bytes dht_key = 6;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->dht_key(), target);
  }

  // optional int32 nat_type = 7;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->nat_type(), target);
  }

  // optional bytes public_ip = 8;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->public_ip(), target);
  }

  // optional uint32 public_port = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->public_port(), target);
  }

  // optional bytes local_ip = 10;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->local_ip(), target);
  }

  // optional uint32 local_port = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->local_port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lego.elect.protobuf.member)
  return target;
}

size_t member::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lego.elect.protobuf.member)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->id());
    }

    // optional bytes pubkey = 2;
    if (has_pubkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pubkey());
    }

    // optional bytes sign = 3;
    if (has_sign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sign());
    }

    // optional bytes dht_key = 6;
    if (has_dht_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->dht_key());
    }

    // optional bytes public_ip = 8;
    if (has_public_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->public_ip());
    }

    // optional bytes local_ip = 10;
    if (has_local_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->local_ip());
    }

    // optional uint32 net_id = 4;
    if (has_net_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->net_id());
    }

    // optional uint32 country = 5;
    if (has_country()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->country());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional int32 nat_type = 7;
    if (has_nat_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nat_type());
    }

    // optional uint32 public_port = 9;
    if (has_public_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->public_port());
    }

    // optional uint32 local_port = 11;
    if (has_local_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->local_port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void member::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lego.elect.protobuf.member)
  GOOGLE_DCHECK_NE(&from, this);
  const member* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const member>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lego.elect.protobuf.member)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lego.elect.protobuf.member)
    MergeFrom(*source);
  }
}

void member::MergeFrom(const member& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lego.elect.protobuf.member)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_pubkey();
      pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_sign();
      sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_dht_key();
      dht_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dht_key_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_public_ip();
      public_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_ip_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_local_ip();
      local_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_ip_);
    }
    if (cached_has_bits & 0x00000040u) {
      net_id_ = from.net_id_;
    }
    if (cached_has_bits & 0x00000080u) {
      country_ = from.country_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      nat_type_ = from.nat_type_;
    }
    if (cached_has_bits & 0x00000200u) {
      public_port_ = from.public_port_;
    }
    if (cached_has_bits & 0x00000400u) {
      local_port_ = from.local_port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void member::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lego.elect.protobuf.member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void member::CopyFrom(const member& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lego.elect.protobuf.member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool member::IsInitialized() const {
  return true;
}

void member::Swap(member* other) {
  if (other == this) return;
  InternalSwap(other);
}
void member::InternalSwap(member* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pubkey_.Swap(&other->pubkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sign_.Swap(&other->sign_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dht_key_.Swap(&other->dht_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  public_ip_.Swap(&other->public_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  local_ip_.Swap(&other->local_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(net_id_, other->net_id_);
  swap(country_, other->country_);
  swap(nat_type_, other->nat_type_);
  swap(public_port_, other->public_port_);
  swap(local_port_, other->local_port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata member::GetMetadata() const {
  protobuf_elect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_elect_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElectBlock::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElectBlock::kInFieldNumber;
const int ElectBlock::kOutFieldNumber;
const int ElectBlock::kAccPubkeyFieldNumber;
const int ElectBlock::kAccSignFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElectBlock::ElectBlock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_elect_2eproto::scc_info_ElectBlock.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:lego.elect.protobuf.ElectBlock)
}
ElectBlock::ElectBlock(const ElectBlock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      in_(from.in_),
      out_(from.out_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  acc_pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_acc_pubkey()) {
    acc_pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acc_pubkey_);
  }
  acc_sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_acc_sign()) {
    acc_sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acc_sign_);
  }
  // @@protoc_insertion_point(copy_constructor:lego.elect.protobuf.ElectBlock)
}

void ElectBlock::SharedCtor() {
  acc_pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  acc_sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ElectBlock::~ElectBlock() {
  // @@protoc_insertion_point(destructor:lego.elect.protobuf.ElectBlock)
  SharedDtor();
}

void ElectBlock::SharedDtor() {
  acc_pubkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  acc_sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ElectBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElectBlock::descriptor() {
  ::protobuf_elect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_elect_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElectBlock& ElectBlock::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_elect_2eproto::scc_info_ElectBlock.base);
  return *internal_default_instance();
}


void ElectBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:lego.elect.protobuf.ElectBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  in_.Clear();
  out_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      acc_pubkey_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      acc_sign_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ElectBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lego.elect.protobuf.ElectBlock)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .lego.elect.protobuf.member in = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_in()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .lego.elect.protobuf.member out = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_out()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes acc_pubkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_acc_pubkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes acc_sign = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_acc_sign()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lego.elect.protobuf.ElectBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lego.elect.protobuf.ElectBlock)
  return false;
#undef DO_
}

void ElectBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lego.elect.protobuf.ElectBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .lego.elect.protobuf.member in = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->in_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->in(static_cast<int>(i)),
      output);
  }

  // repeated .lego.elect.protobuf.member out = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->out_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->out(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes acc_pubkey = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->acc_pubkey(), output);
  }

  // optional bytes acc_sign = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->acc_sign(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:lego.elect.protobuf.ElectBlock)
}

::google::protobuf::uint8* ElectBlock::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lego.elect.protobuf.ElectBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .lego.elect.protobuf.member in = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->in_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->in(static_cast<int>(i)), deterministic, target);
  }

  // repeated .lego.elect.protobuf.member out = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->out_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->out(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes acc_pubkey = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->acc_pubkey(), target);
  }

  // optional bytes acc_sign = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->acc_sign(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lego.elect.protobuf.ElectBlock)
  return target;
}

size_t ElectBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lego.elect.protobuf.ElectBlock)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .lego.elect.protobuf.member in = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->in_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->in(static_cast<int>(i)));
    }
  }

  // repeated .lego.elect.protobuf.member out = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->out_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->out(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes acc_pubkey = 3;
    if (has_acc_pubkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->acc_pubkey());
    }

    // optional bytes acc_sign = 4;
    if (has_acc_sign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->acc_sign());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElectBlock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lego.elect.protobuf.ElectBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const ElectBlock* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElectBlock>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lego.elect.protobuf.ElectBlock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lego.elect.protobuf.ElectBlock)
    MergeFrom(*source);
  }
}

void ElectBlock::MergeFrom(const ElectBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lego.elect.protobuf.ElectBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  in_.MergeFrom(from.in_);
  out_.MergeFrom(from.out_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_acc_pubkey();
      acc_pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acc_pubkey_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_acc_sign();
      acc_sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acc_sign_);
    }
  }
}

void ElectBlock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lego.elect.protobuf.ElectBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElectBlock::CopyFrom(const ElectBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lego.elect.protobuf.ElectBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElectBlock::IsInitialized() const {
  return true;
}

void ElectBlock::Swap(ElectBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElectBlock::InternalSwap(ElectBlock* other) {
  using std::swap;
  CastToBase(&in_)->InternalSwap(CastToBase(&other->in_));
  CastToBase(&out_)->InternalSwap(CastToBase(&other->out_));
  acc_pubkey_.Swap(&other->acc_pubkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  acc_sign_.Swap(&other->acc_sign_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElectBlock::GetMetadata() const {
  protobuf_elect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_elect_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElectMessage::InitAsDefaultInstance() {
  ::lego::elect::protobuf::_ElectMessage_default_instance_._instance.get_mutable()->elect_block_ = const_cast< ::lego::elect::protobuf::ElectBlock*>(
      ::lego::elect::protobuf::ElectBlock::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElectMessage::kElectBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElectMessage::ElectMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_elect_2eproto::scc_info_ElectMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:lego.elect.protobuf.ElectMessage)
}
ElectMessage::ElectMessage(const ElectMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_elect_block()) {
    elect_block_ = new ::lego::elect::protobuf::ElectBlock(*from.elect_block_);
  } else {
    elect_block_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:lego.elect.protobuf.ElectMessage)
}

void ElectMessage::SharedCtor() {
  elect_block_ = NULL;
}

ElectMessage::~ElectMessage() {
  // @@protoc_insertion_point(destructor:lego.elect.protobuf.ElectMessage)
  SharedDtor();
}

void ElectMessage::SharedDtor() {
  if (this != internal_default_instance()) delete elect_block_;
}

void ElectMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElectMessage::descriptor() {
  ::protobuf_elect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_elect_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElectMessage& ElectMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_elect_2eproto::scc_info_ElectMessage.base);
  return *internal_default_instance();
}


void ElectMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:lego.elect.protobuf.ElectMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(elect_block_ != NULL);
    elect_block_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ElectMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lego.elect.protobuf.ElectMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .lego.elect.protobuf.ElectBlock elect_block = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_elect_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lego.elect.protobuf.ElectMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lego.elect.protobuf.ElectMessage)
  return false;
#undef DO_
}

void ElectMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lego.elect.protobuf.ElectMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .lego.elect.protobuf.ElectBlock elect_block = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_elect_block(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:lego.elect.protobuf.ElectMessage)
}

::google::protobuf::uint8* ElectMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lego.elect.protobuf.ElectMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .lego.elect.protobuf.ElectBlock elect_block = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_elect_block(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lego.elect.protobuf.ElectMessage)
  return target;
}

size_t ElectMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lego.elect.protobuf.ElectMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .lego.elect.protobuf.ElectBlock elect_block = 1;
  if (has_elect_block()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *elect_block_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElectMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lego.elect.protobuf.ElectMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ElectMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElectMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lego.elect.protobuf.ElectMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lego.elect.protobuf.ElectMessage)
    MergeFrom(*source);
  }
}

void ElectMessage::MergeFrom(const ElectMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lego.elect.protobuf.ElectMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_elect_block()) {
    mutable_elect_block()->::lego::elect::protobuf::ElectBlock::MergeFrom(from.elect_block());
  }
}

void ElectMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lego.elect.protobuf.ElectMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElectMessage::CopyFrom(const ElectMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lego.elect.protobuf.ElectMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElectMessage::IsInitialized() const {
  return true;
}

void ElectMessage::Swap(ElectMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElectMessage::InternalSwap(ElectMessage* other) {
  using std::swap;
  swap(elect_block_, other->elect_block_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElectMessage::GetMetadata() const {
  protobuf_elect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_elect_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace elect
}  // namespace lego
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::lego::elect::protobuf::member* Arena::CreateMaybeMessage< ::lego::elect::protobuf::member >(Arena* arena) {
  return Arena::CreateInternal< ::lego::elect::protobuf::member >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::lego::elect::protobuf::ElectBlock* Arena::CreateMaybeMessage< ::lego::elect::protobuf::ElectBlock >(Arena* arena) {
  return Arena::CreateInternal< ::lego::elect::protobuf::ElectBlock >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::lego::elect::protobuf::ElectMessage* Arena::CreateMaybeMessage< ::lego::elect::protobuf::ElectMessage >(Arena* arena) {
  return Arena::CreateInternal< ::lego::elect::protobuf::ElectMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
