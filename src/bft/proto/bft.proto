syntax = "proto2";

package tenon.bft.protobuf;

message AccountAttributes {
    optional bytes key = 1;
	optional bytes value = 2;
}

message StorageItem {
	optional bytes id = 1;
	optional bytes key = 2;
	optional bytes value = 3;
}

message TransferItem {
    optional bytes from = 1;
	optional bytes to = 2;
	optional uint64 amount = 3;
}

message TxInfo {
	optional uint32 version = 1;
	optional bytes gid = 2;
	optional bytes from = 3;
	optional bytes from_pubkey = 4;
	optional bytes from_sign = 5;
	optional bytes to = 6;
	optional uint64 amount = 7;
	optional uint64 gas_limit = 8;
    optional uint64 gas_used = 9;
    optional uint64 gas_price = 10;
	optional uint64 balance = 11;
	optional bool to_add = 12;
    optional uint32 type = 13;
    repeated AccountAttributes attr = 14; 
    optional uint32 status = 15;
    optional bytes tx_hash = 16;
    optional uint32 network_id = 17;
    optional uint32 call_contract_step = 18;
    repeated StorageItem storages = 19;
    repeated TransferItem transfers = 20;
}

message Block {
	optional uint32 network_id = 1;
	optional uint32 pool_index = 2;
    optional bytes prehash = 3;
    optional bytes hash = 4;
    optional uint32 version = 5;
	optional uint64 height = 6;
    optional uint64 consistency_random = 7;
    optional uint32 electblock_height = 8;
	repeated uint64 bitmap = 9;
    repeated TxInfo tx_list = 10;
	optional uint64 timestamp = 11;
	optional uint64 timeblock_height = 12;
    optional bytes bls_agg_sign_x = 13;
	optional bytes bls_agg_sign_y = 14;
	repeated uint64 commit_bitmap = 15;
}

message TxPrepareItem {
	optional bytes acc_addr = 1;
	optional bytes gid = 2;
}

message LeaderTxPrepare {
	repeated TxPrepareItem txs = 1;
	optional Block block = 2;
}

message BackupTxPrepare {
	optional int32 status = 1;
}

message LeaderTxPreCommit {
	optional int32 status = 1;
}

message BackupTxPreCommit {
	optional int32 status = 1;
}

message LeaderTxCommit {
	optional int32 status = 1;
}

message ToAccountTx {
	optional Block block = 1;
}

message TxBft {
	optional TxInfo new_tx = 1;
	optional ToAccountTx to_tx = 2;
	optional LeaderTxPrepare ltx_prepare = 3;
	optional BackupTxPrepare btx_prepare = 4;
	optional LeaderTxPreCommit ltx_precommit = 5;
	optional BackupTxPreCommit btx_precommit = 6;
	optional LeaderTxCommit ltx_commit = 7;
}

message BftMessage {
	optional bytes gid = 1;
	optional int32 bft_step = 2;
	optional bool leader = 3;
	optional uint32 net_id = 4;
	optional bytes sign_challenge = 5;
	optional bytes sign_response = 6;
	repeated uint64 bitmap = 7;
	optional bool agree = 8;
	optional uint32 pool_index = 9;
	optional bytes data = 10;
	optional bytes prepare_hash = 11;
	optional bytes node_ip = 12;
	optional uint32 node_port = 13;
	optional uint32 epoch = 14;
	optional uint32 member_index = 15;
	optional bytes pubkey = 16;
	optional bytes backup_enc_data = 17;
	optional uint64 elect_height = 18;
	optional bytes bls_sign_x = 19;
	optional bytes bls_sign_y = 20;
	repeated uint64 commit_bitmap = 21;
}
